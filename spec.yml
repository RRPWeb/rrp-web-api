openapi: 3.0.0
info:
  description: Apis for collaboration beetween recallis 
  version: "1.0.0"
  title: RRP Web Apis 
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: amit.here1@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: Test environment
    url: https://rrp-web-api.herokuapp.com/
tags:
  - name: auth
    description: Generates otp for various secure operation
  - name: member
    description: Operations related to member
paths:
  /auth/otp/signin:
    get:
      tags:
        - auth
      summary: Generate otp for registering a new user
      description: Indian citizens above 23 years age , not employed in govt job can register
      operationId: getSignInOtp
      parameters:
        - in: query
          name: phoneNumber
          description: Ten digit indian phone number for getting otp
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        '400':
          description: Invalid parameters
  /auth/otp/login:
    get:
      tags:
        - auth
      summary: Generate otp to login a registered user
      description: should be used after signin
      operationId: getLoginOtp
      parameters:
        - in: query
          name: phoneNumber
          description: Ten digit indian phone number for getting otp
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        '400':
          description: Invalid parameters
  /auth/login:
    post:
      tags:
        - auth
      summary: Login to access the secure resources
      description: should be used after signin
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userPhoneNum:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid username or password


externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    BasicApiResponse:
      type: object
      properties:
        messege:
          type: string
          description: success or failure 
        error:
          type: string
          description: Cause of error 
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: Short lived jwt token for accesing secure resource 
        refreshToken:
          type: string
          description: Token with longer validity to regenerate the token
  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header