openapi: 3.0.0
info:
  description: Apis for collaboration beetween recallis 
  version: "1.0.0"
  title: RRP Web Apis 
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: amit.here1@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: Test environment
    url: https://rrp-web-api.herokuapp.com/
tags:
  - name: auth
    description: Apis for authentication to access secure apis 
  - name: user
    description: Operations related to user
paths:
  /auth/otp/signin:
    get:
      tags:
        - auth
      summary: Generate otp for registering a new user
      description: Indian citizens above 23 years age , not employed in govt job can register
      operationId: getSignInOtp
      parameters:
        - in: query
          name: phoneNumber
          description: Ten digit indian phone number for getting otp
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        '400':
          description: Invalid parameters
  /auth/otp/login:
    get:
      tags:
        - auth
      summary: Generate otp to login a registered user
      description: Should be used after successful signin
      operationId: getLoginOtp
      parameters:
        - in: query
          name: phoneNumber
          description: Ten digit indian phone number for getting otp
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        '400':
          description: Invalid parameters
  /auth/login:
    post:
      tags:
        - auth
      summary: Login to access the secure resources
      description: Should be used after success signin
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userPhoneNum:
                  description: Registered 10 digit phone number
                  type: string
                otp:
                  description: Generated otp for login
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid username or password
  /auth/signin:
    post:
      tags:
        - auth
      summary: Signin api for a new user 
      description: Should be used after generating sign in otp
      operationId: signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                userPhoneNum:
                  type: string
                voterId:
                  type: string
                otp:
                  type: string
                name:
                  type: string
                ageQualifier:
                  type: boolean
                isGovtEmployee:
                  type: boolean
      responses:
        '200':
          description: successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid username or password
  /auth/refreshToken:
    post:
      security:
        - Authorization: []
      tags:
        - auth
      summary: Refresh auth token  
      description: Client should use this api for maintaining the authenticated session  
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid username or password
  /auth/logout:
    post:
      security:
        - Authorization: []
      tags:
        - auth
      summary: Logout user  
      description: Invalidates the refresh token to prevent getting a access token using it
      operationId: logout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid username or password
  /user:
    get:
      security:
        - Authorization: []
      tags:
        - user
      summary: Api to fetch basic info of all members
      description:  This is a unsecure api and it only gives partial information about all members in a paginated manner it is open to all
      operationId: getBasicInfo
      parameters:
        - in: query
          name: memberPerPage
          description: Number should be less than 10
          required: false
          default: 5
          schema:
            type: integer
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        '401':
          description: Invalid parameter
  /photoUpload:
     post:
       tags:
         - user 
       summary: Uploads a file.
       description: only one file can be uploaded 
       operationId: photoUpload
       requestBody:
         content:
           application/octet-stream:
             schema:
                type: string
                format: binary
       responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    BasicApiResponse:
      type: object
      properties:
        messege:
          type: string
          description: success or failure 
        error:
          type: string
          description: Cause of error 
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: Short lived jwt token for accesing secure resource 
        refreshToken:
          type: string
          description: Token with longer validity to regenerate the token
  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
    
